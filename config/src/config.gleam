import envoy
import gleam/io
import gleam/result
import gleam/string
import simplifile

/// Generate the hexdocs/config module with URL constants from environment variables.
///
/// Environment variables:
/// - SEARCH_URL: The search API endpoint (default: https://search.hexdocs.pm)
/// - HEXDOCS_URL: The hexdocs base URL (default: https://hexdocs.pm)
/// - HEXPM_URL: The hex.pm API URL (default: https://hex.pm)
pub fn main() {
  io.println("Generating hexdocs/config from environment variables...")
  io.println("")

  let search_url =
    envoy.get("SEARCH_URL") |> result.unwrap("https://search.hexdocs.pm")
  let hexdocs_url =
    envoy.get("HEXDOCS_URL") |> result.unwrap("https://hexdocs.pm")
  let hexpm_url = envoy.get("HEXPM_URL") |> result.unwrap("https://hex.pm")

  io.println("Configuration:")
  print_config("SEARCH_URL", search_url)
  print_config("HEXDOCS_URL", hexdocs_url)
  print_config("HEXPM_URL", hexpm_url)
  io.println("")

  let content = generate_module(search_url, hexdocs_url, hexpm_url)
  let output_path = "../src/hexdocs/config.gleam"

  case simplifile.write(output_path, content) {
    Ok(_) -> {
      io.println("✓ Successfully generated " <> output_path)
    }
    Error(err) -> {
      io.println("✗ Failed to write config file:")
      io.println("  " <> string.inspect(err))
    }
  }
}

fn generate_module(
  search_url: String,
  hexdocs_url: String,
  hexpm_url: String,
) -> String {
  "/// Configuration constants generated from environment variables at build time.
/// Do not edit this file directly - it is generated by `cd config && gleam run -m config`.
///
/// To regenerate with custom URLs, set environment variables before running:
///   cd config && SEARCH_URL=... HEXDOCS_URL=... HEXPM_URL=... gleam run -m config

/// Get the search API URL
pub fn search_url() -> String {
  \""
  <> search_url
  <> "\"
}

/// Get the hexdocs base URL
pub fn hexdocs_url() -> String {
  \""
  <> hexdocs_url
  <> "\"
}

/// Get the hex.pm API URL
pub fn hexpm_url() -> String {
  \""
  <> hexpm_url
  <> "\"
}
"
}

fn print_config(key: String, value: String) {
  let default = case key {
    "SEARCH_URL" -> "https://search.hexdocs.pm"
    "HEXDOCS_URL" -> "https://hexdocs.pm"
    "HEXPM_URL" -> "https://hex.pm"
    _ -> ""
  }

  let source = case value == default {
    True -> "(default)"
    False -> "(from env)"
  }
  io.println("  " <> key <> " = " <> value <> " " <> source)
}
